// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using course_management_backend.Contexts;

namespace course_management_backend.Migrations
{
    [DbContext(typeof(CourseContext))]
    partial class CourseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("course_management_backend.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AvailableOnTerm")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Credits");

                    b.Property<Guid>("DepartmentId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("NumberOfLecturesPerTerm");

                    b.Property<int?>("NumberOfSeminarsPerTerm");

                    b.Property<string>("RequirementsFromStudents")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<Guid>("ResponsibleId");

                    b.Property<string>("TypeOfExam")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ResponsibleId");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            Id = new Guid("73a11a80-ba3d-4a76-ad43-9d86ffc76bf6"),
                            AvailableOnTerm = "Fall",
                            Credits = 5,
                            DepartmentId = new Guid("7c9d3333-5cc0-43f5-aa21-728866a2ee27"),
                            Description = "Lorem ipsum of desc",
                            Name = "Course 1",
                            NumberOfLecturesPerTerm = 12,
                            NumberOfSeminarsPerTerm = 12,
                            RequirementsFromStudents = "Lorem ipsum of requirements",
                            ResponsibleId = new Guid("16dc743a-727a-4f2f-bb1e-d500f949ca8d"),
                            TypeOfExam = "WrittenExam"
                        });
                });

            modelBuilder.Entity("course_management_backend.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7c9d3333-5cc0-43f5-aa21-728866a2ee27"),
                            Name = "Comparative and Institutional Economics"
                        },
                        new
                        {
                            Id = new Guid("d5f07405-88ce-404a-9c61-c5f8ffed44f6"),
                            Name = "Macroeconomics"
                        },
                        new
                        {
                            Id = new Guid("4cfe6f2d-7d16-43f9-93fc-13baa48daf84"),
                            Name = "Microeconomics"
                        },
                        new
                        {
                            Id = new Guid("35f72a53-8af7-4dc8-ab1e-34199f034760"),
                            Name = "Labour Economis"
                        },
                        new
                        {
                            Id = new Guid("2268dc0b-9efc-43f0-938a-2e2bb8e643b1"),
                            Name = "Finance"
                        },
                        new
                        {
                            Id = new Guid("6cd8dd10-6564-4d40-8dc5-316c5e02637c"),
                            Name = "Mathematics"
                        },
                        new
                        {
                            Id = new Guid("0a3e1694-b9b8-4407-87f4-328925322d17"),
                            Name = "Statistics"
                        },
                        new
                        {
                            Id = new Guid("2f27da3b-f0a8-4ff6-a954-2818e129aecd"),
                            Name = "Economic Policy"
                        },
                        new
                        {
                            Id = new Guid("c8fcac1e-8fa1-4745-8fa7-03f9d78feaf6"),
                            Name = "Mathematical Economics and Economic Analysis"
                        });
                });

            modelBuilder.Entity("course_management_backend.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("16dc743a-727a-4f2f-bb1e-d500f949ca8d"),
                            FirstName = "Brian",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = new Guid("5f7c7199-7012-429d-a744-5a290a32e16b"),
                            FirstName = "Anthony",
                            LastName = "Grayer"
                        },
                        new
                        {
                            Id = new Guid("94412180-729e-41c0-abac-b9e5df24aec8"),
                            FirstName = "Jean",
                            LastName = "Ashford"
                        },
                        new
                        {
                            Id = new Guid("3e037a6e-f02b-453b-baa6-c2c25e6b2ba3"),
                            FirstName = "Michelle",
                            LastName = "Reed"
                        },
                        new
                        {
                            Id = new Guid("2ee707ea-0234-4ea1-9119-1c2e91f7aeeb"),
                            FirstName = "Dave",
                            LastName = "Cuellar"
                        },
                        new
                        {
                            Id = new Guid("08bdfec6-b2c3-4e3a-b9fa-37bb817daaf1"),
                            FirstName = "Frances",
                            LastName = "Bouie"
                        },
                        new
                        {
                            Id = new Guid("f75c4ec9-9ad4-4a04-94d5-0237b9839f2a"),
                            FirstName = "Howard",
                            LastName = "Clay"
                        },
                        new
                        {
                            Id = new Guid("1428ddec-d8f9-47b3-892b-16fa2bd0c0d3"),
                            FirstName = "Jennifer",
                            LastName = "Spahr"
                        },
                        new
                        {
                            Id = new Guid("1e989519-83db-46b7-99e7-fdf5e7487d88"),
                            FirstName = "Patrick",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = new Guid("5a3cb214-9e88-4e65-87be-f1d4b93fd20b"),
                            FirstName = "John",
                            LastName = "Haas"
                        },
                        new
                        {
                            Id = new Guid("ed0aac76-e847-4076-8be6-fcddc25a8990"),
                            FirstName = "Ethel",
                            LastName = "Stebbins"
                        },
                        new
                        {
                            Id = new Guid("7123e10a-0b9c-4225-87dd-44b67d8b17ea"),
                            FirstName = "Henry",
                            LastName = "Arredondo"
                        },
                        new
                        {
                            Id = new Guid("7ba3c2d6-75ab-4e66-8b92-7578ecbc07cd"),
                            FirstName = "Roseann",
                            LastName = "Hammel"
                        });
                });

            modelBuilder.Entity("course_management_backend.Entities.Course", b =>
                {
                    b.HasOne("course_management_backend.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("course_management_backend.Entities.User", "Responsible")
                        .WithMany()
                        .HasForeignKey("ResponsibleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
